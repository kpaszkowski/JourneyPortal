@model JourneyPortal.ViewModels.Offers.OffersViewModel
@using PagedList.Mvc;
<link href="~/Content/flipItem.css" rel="stylesheet" />
<div class="contentBody" id="products">
    <h2><b>Aktualne oferty</b></h2>
    <input type="text" id="myInput" style="max-width:100%" onkeyup="myFunction()" placeholder="Wyszukaj oferty po nazwie" title="Wyszukaj oferty" />
    <hr/>
        <div class="wrapper">
            @foreach (var item in Model.OffersList.Where(x => x.IsActive))
            {
                <div class="card" style="width:100%;height:100%">
                    <div class="imgDiv">
                        @if (item.Image != null)
                        {
                            <img class="cardImg" src="data:image;base64,@System.Convert.ToBase64String(item.Image)">
                        }
                        else
                        {
                            <img class="cardImg" src="~/Content/Images/empty.svg" />
                        }
                    </div>
                    <div class="card-body">
                        <h4 class="card-title">
                            @Html.ActionLink(item.Name, "GetOffersDetail", "Offers", new { id = item.Id }, new { @class = "offerName" })
                            @if (item.IsFinished)
                            {
                                <span> - </span><span style="color:red">Oferta zakończona</span>
                            }
                        </h4>
                        <p class="card-text">

                                @for (int i = 0; i < 5; i++)
                                {
                                    if (i < Math.Floor(item.Rate))
                                    {
                                        <span class="fa fa-star" style=" color: orange;"></span>
                                    }
                                    else
                                    {
                                        <span class="fa fa-star"></span>
                                    }
                                }
                                            </p>
                    </div>
                    <ul class="list-group list-group-flush" style="width:100%">
                        <li class="list-group-item">
                            <div class="wrapper">
                                <b>Termin : </b>@item.StartDate.ToShortDateString() - @item.EndDate.ToShortDateString()
                            </div>
                        </li>
                        <li class="list-group-item"><b>Dodana :</b> @item.CreationDate.ToShortDateString()</li>
                        <li class="list-group-item"><b>Cena :</b> @item.Cost</li>
                        <li class="list-group-item"><b>Biuro podróży :</b> @Html.ActionLink(item.TravelAgencyOwnerName, "GetTravelAgencyProfile", "Users", new { userName = item.TravelAgencyOwnerName }, null)</li>
                    </ul>
            </div>

            }
        </div>
        <br />
        Strona @(Model.OffersList.PageCount < Model.OffersList.PageNumber ? 0 : Model.OffersList.PageNumber) z @Model.OffersList.PageCount
        @Html.PagedListPager(Model.OffersList, page => Url.Action("IndexGetAllOffers", new { page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "products" }))
    </div>
<style>
        .wrapper > div {
            border: 2px solid #ddd;
            border-radius: 5px;
            padding: 1em;
        }
    .wrapper {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        grid-gap: 10px;
    }
    .cardImg {
        border-radius: 10px;
        width:100%;
        height:100%
    }
    .imgDiv{
        height:50%;
    }
    #myInput {
        background-position: 10px 10px;
        background-repeat: no-repeat;
        width: 100%;
        font-size: 16px;
        padding: 12px 12px 12px 40px;
        border: 1px solid #ddd;
        margin-bottom: 12px;
    }
</style>
<script>

    function myFunction() {
        var input, i ,filter;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        card = $('.card');
        for (var i = 0; i < card.length; i++) {
            var item = card[i];
            if (item.children[1].children[0].children[0].innerText.toUpperCase().indexOf(filter) > -1) {
                item.style.display = "";
            }
            else {
                item.style.display = "none";
            }
        }
    }
</script>