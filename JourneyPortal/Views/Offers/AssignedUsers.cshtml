@model JourneyPortal.ViewModels.Users.AssignedUsersGridViewModel
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<div class="container "style="width:100%">
    <br />
    <table class="table table-striped" style="width:100%">
        <thead>
            <tr>
                @*<th>@Html.ActionLink("Id", "GetAssignedUsers", new { sortOrder = ViewBag.IdSortParm })</th>*@
                <th>Nazwa użytkownika</th>
                <th>Imię</th>
                <th>Nazwisko</th>
                <th>Email</th>
                <th>Liczba miejsc</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.AssignedUserList)
            {
                <tr>
                    <td>@item.UserName</td>
                    <td>@item.FirstName</td>
                    <td>@item.LastName</td>
                    <td>@item.Email</td>
                    <td>@item.NumberOfBooking</td>
                    <td>
                        @if (item.Status == "Niezaakceptowany")
                        {
                            using (Html.BeginForm("ApproveBooking", "Offers", new { userName = item.UserName, offerId = item.OfferId }, FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <button class="btn btn-warning" type="submit">Zaakceptuj</button>
                            }
                            using (Html.BeginForm("RejectBooking", "Offers", new { userName = item.UserName , offerId = item.OfferId }, FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <button class="btn btn-warning" type="submit">Odrzuć</button>
                            }
                        }
                        else if (item.Status == "Zaakceptowany")
                        {
                            using (Html.BeginForm("RejectBooking", "Offers", new { userName = item.UserName, offerId = item.OfferId }, FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <button class="btn btn-warning" type="submit">Odrzuć</button>
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <br />
    @*Elementy @(ViewBag.ItemNumber != 0 ? (ViewBag.PageSize * Model.AssignedUserList.PageNumber - ViewBag.PageSize + 1) : 0) - @(Math.Min((ViewBag.PageSize * Model.AssignedUserList.PageNumber), ViewBag.ItemNumber)) z @ViewBag.ItemNumber*@
    <br />
    Strona @(Model.AssignedUserList.PageCount < Model.AssignedUserList.PageNumber ? 0 : Model.AssignedUserList.PageNumber) z @Model.AssignedUserList.PageCount

    @Html.PagedListPager(Model.AssignedUserList, page => Url.Action("GetAssignedUsers",
            new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter ,offerId = Model.OfferId}), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "usersGridList" }))
</div>
<script>
    function submitSignOff(id) {
        $('#signOff-' + id).submit();
    }
</script>