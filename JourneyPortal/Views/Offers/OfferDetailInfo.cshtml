@model JourneyPortal.ViewModels.Offers.OfferDetailViewModel
<link href="~/Content/Offers/GridTab.css" rel="stylesheet" />
<div class="contentBody">
    <div class="container" style="width:100%;height:100%">
        <h1 class="my-4">
            "@Model.Name"
            <small>poleca - @Model.TravelAgencyOwnerName</small>
        </h1>
        <div class="row" style="width:100%;height:100%">

            <div class="col-md-8">
                @using (Html.BeginForm("EditImage", "Offers", new { offerId = Model.Id }, FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
                {
                    <div class="imgDiv">
                        @if (Model.Image != null)
                        {
                            <img id="offerImage" class="cardImg" src="@Url.Content("~/Content/OffersImages/" + @Path.GetFileName(Model.Image))">
                        }
                        else
                        {
                            <img id="offerImage" class="cardImg" src="~/Content/Images/empty.jpg" />
                        }
                    </div>
                    if (Request.IsAuthenticated && Model.IsOwner)
                    {
                        <div>
                            <input type="file" title="search image" id="file" name="file" onchange="show(this)" />
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" class="btn btn-default" value="Zapisz" />
                            </div>
                        </div>
                    }
                }
            </div>

            <div class="col-md-4">
                <h3 class="my-3">Podstawowe informacje</h3>
                <ul class="list-group list-group-flush" style="width:100%">
                    <li class="list-group-item">
                        <div class="wrapper">
                            <b>Termin : </b>@Model.StartDate.ToShortDateString() - @Model.EndDate.ToShortDateString()
                        </div>
                    </li>
                    <li class="list-group-item">
                        <div class="wrapper">
                            <b>Dodana :</b> @Model.CreationDate.ToShortDateString()
                        </div>
                    </li>
                    <li class="list-group-item">
                        <div class="wrapper">
                            <b>Cena :</b> @Model.Cost
                        </div>
                    </li>
                    <li class="list-group-item">
                        <div class="wrapper">
                            <b>Kraj :</b> @Model.Country
                        </div>
                    </li>
                    <li class="list-group-item">
                            <b>Ocena : </b>
                            <div style="width:auto">
                                @for (int i = 0; i < 5; i++)
                                {
                                    if (i < Math.Floor(Model.Rate))
                                    {
                                        <span class="fa fa-star" style=" color: orange;"></span>
                                    }
                                    else
                                    {
                                        <span class="fa fa-star"></span>
                                    }
                                }
                            </div>                        
                    </li>
                    <li class="list-group-item">
                        <div class="wrapper">
                            <b>Liczba wolnych miejsc :</b> @Model.NuberOfBooking
                        </div>
                    </li>
                    <li class="list-group-item">
                        <div class="wrapper">
                            <b>Liczba twoich rezerwacji :</b> @Model.NumberOfUserCurrentBooking
                        </div>
                    </li>
                    <li class="list-group-item">
                        <div class="wrapper">
                            <b>Biuro podróży : </b> @Html.ActionLink(Model.TravelAgencyOwnerName, "GetTravelAgencyProfile", "Users", new { userName = Model.TravelAgencyOwnerName }, null)
                        </div>
                    </li>
                    @if (User.Identity.IsAuthenticated && Model.IsUser)
                    {
                        <li class="list-group-item">
                            <div class="wrapper">
                                    @using (Html.BeginForm("BookTrip", "Offers", FormMethod.Post))
                                    {
                                        @Html.Hidden("offerId", Model.Id)
                                        if (Model.NuberOfBooking == 0)
                                        {
                                            <button class="btn btn-success" disabled="disabled" type="submit">Zarezerwuj miejsca</button>
                                            @Html.Editor("bookingCount", new { htmlAttributes = new { @class = "form-control", style = "width:auto", @type = "number", @min = "1", @step = "1", @value = "1", @required = "required", @max = Model.NuberOfBooking, disabled = "disabled" } })
                                        }
                                        else
                                        {
                                            <button class="btn btn-success" type="submit">Zarezerwuj miejsca</button>
                                            @Html.Editor("bookingCount", new { htmlAttributes = new { @class = "form-control", style = "width:auto", @type = "number", @min = "1", @step = "1", @value = "1", @required = "required", @max = Model.NuberOfBooking } })

                                        }
                                        @Html.ValidationMessage("bookingCount", "", new { @class = "text-danger" })
                                    }

                            </div>
                        </li>
                    }
                </ul>
            </div>

        </div>
        <div class="row" style="padding:5px;border: 2px solid #ddd;
            border-radius: 5px;">
            <h2><b>Opis</b></h2>
            <hr/>
            <div style="word-wrap:break-word">
                @Html.Raw(Model.Description)
            </div>
        </div>
        <br />
        <div class="row" style="padding:5px;border: 2px solid #ddd;
            border-radius: 5px;">
            <div class="col-lg-1">                    
                <h3><b>Opinie</b></h3>
            </div>
            <div class="col-lg-11">
                <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Dodaj opinię</button>
            </div>
            <div class="modal fade" id="myModal" role="dialog">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content" style="width:60%">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">Dodaj opinię</h4>
                        </div>
                        <div class="modal-body">
                            @Html.Partial("~/Views/Offers/CreateComment.cshtml", new JourneyPortal.ViewModels.Offers.CreateCommentToOfferViewModel { CanAddComment = Model.CanAddComment, OfferId = Model.Id, })
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Zamknij</button>
                        </div>
                    </div>
                </div>
            </div>
            <hr/>
            @Html.Action("GetComments", new { offerId = Model.Id })
        </div>
        <br />

        @if (Model.IsTravelAgency && Model.IsOwner)
        {
            <div class="row" style="padding:5px;border: 2px solid #ddd;
                border-radius: 5px;">
                    <h3><b>Zapisani użytkownicy</b></h3>
                <hr/>
                    <div>
                        @Html.Action("GetAssignedUsers", new { offerId = Model.Id })
                    </div>
            </div>
        }
        
        <h3 class="my-4"><b>Inne oferty biura - </b><i>@Model.TravelAgencyOwnerName</i></h3>
        <hr/>
        <div class="wrapper">
            @foreach (var item in Model.RandomOffers)
            {
                <div class="card" style="width:100%;height:100%">
                    <div class="imgDiv">
                        @if (item.Image != null)
                        {
                            <img class="cardImg" src="@Url.Content("~/Content/OffersImages/" + @Path.GetFileName(item.Image))">
                        }
                        else
                        {
                            <img class="cardImg" src="~/Content/Images/empty.jpg" />
                        }
                    </div>
                    <div class="card-body">
                        <h4 class="card-title"> @Html.ActionLink(item.Name, "GetOffersDetail", "Offers", new { id = item.Id }, null)</h4>
                        <p class="card-text">

                            @for (int i = 0; i < 5; i++)
                            {
                                if (i < Math.Floor(item.Rate))
                                {
                                    <span class="fa fa-star" style=" color: orange;"></span>
                                }
                                else
                                {
                                    <span class="fa fa-star"></span>
                                }
                            }
                        </p>
                    </div>
                    <ul class="list-group list-group-flush" style="width:100%">
                        <li class="list-group-item">
                            <div class="wrapper">
                                <b>Termin : </b>@item.StartDate.ToShortDateString() - @item.EndDate.ToShortDateString()
                            </div>
                        </li>
                        <li class="list-group-item"><b>Dodana :</b> @item.CreationDate.ToShortDateString()</li>
                        <li class="list-group-item"><b>Cena :</b> @item.Cost</li>
                    </ul>
                </div>
            }
        </div>
    </div>
</div>
<script>
        function show(input) {
            if (input.files && input.files[0]) {
                var filerdr = new FileReader();
                filerdr.onload = function (e) {
                    $('#offerImage').attr('src', e.target.result);
                }
                filerdr.readAsDataURL(input.files[0]);
            }
        }
</script>
<style>
    .wrapper > div {
        border: 2px solid #ddd;
        border-radius: 5px;
        padding: 1em;
    }

    .wrapper {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 400px));
        grid-gap: 10px;
    }

    .cardImg {
        border-radius: 60px;
        width: 100%;
        height: 100%
    }
    .imgDiv {
        height: 50%;
    }
</style>