@model JourneyPortal.ViewModels.Offers.OfferDetailViewModel

@{
    
}

<br />
<div class="container">
    <div class="media">
        <div class="media-left media-top">
            <img src="~/Content/Images/empytAvatar.png" class="media-object" style="width:320px" />
        </div>
        <div class="media-right media-top">
            <h3 class="media-heading">@Model.Name</h3><br />
            @Html.LabelFor(m => m.StartDate, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control", disabled = "disabled" })
            </div>
            @Html.LabelFor(m => m.EndDate, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control", disabled = "disabled" })
            </div>
            @Html.LabelFor(m => m.CreationDate, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.CreationDate, new { @class = "form-control", disabled = "disabled" })
            </div>
            @Html.LabelFor(m => m.Cost, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.Cost, new { @class = "form-control", disabled = "disabled" })
            </div>
            @Html.LabelFor(m => m.NuberOfBooking, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.NuberOfBooking, new { @class = "form-control", disabled = "disabled" })
            </div>
            @Html.Label("Nazwa biura", new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                <button id="getTravelAgencyInfo" class="btn btn-info">@Html.ActionLink(Model.TravelAgencyOwnerName, "GetTravelAgencyProfile", "Users", new { userName = Model.TravelAgencyOwnerName }, null)</button>
            </div>

            @Html.LabelFor(m => m.Description, new { @class = "col-md-4 control-label" })
            <div class="col-md-8">
                <p>@Html.Raw(Model.Description)</p>
            </div>
            @if (User.Identity.IsAuthenticated && Model.IsUser)
            {
                @*using (Html.BeginForm("BookTrip", "Offers", FormMethod.Post))
                {
                    //@Html.AntiForgeryToken()
                    @Html.HiddenFor(x => x.SessionCacheKey)
                    @Html.Hidden("offerId",Model.ID);
                    @Html.Label("Liczba rezerwacji", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.Editor("bookingCount", new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "1", @step = "1", @value = "1", @required = "required", @max = Model.NuberOfBooking} })
                        @Html.ValidationMessage("bookingCount", "", new { @class = "text-danger" })
                    </div>
                    <button class="btn btn-success" type="submit">Zarezerwuj miejsca</button>
                }*@

            }
        </div>
    </div>
</div>

@*<script>
    function bookTrip() {

        var bookingNum = $('#Liczba_rezerwacji').val();
        var form = $('#signOffForm').serialize();
        if (bookingNum < 1 || bookingNum > @Model.NuberOfBooking) {

            //handle error
        }
        else {
            $.post("/Offers/BookTrip", { bookingCount: bookingNum, offerId: @Model.ID});
        }
    }
</script>*@