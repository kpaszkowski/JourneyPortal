@model JourneyPortal.ViewModels.Offers.ComentsGridViewModel
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<style>
    .mycontent {
        border-right: 1px solid #333;
    }
</style>
<div class="container" style="width:100%">
    <br/>
    <ul class="list-group">
        @foreach (var item in Model.CommentsList)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center" style="width:94%">
                <div class="container">
                    <div class="row">
                        <div class="col-sm-2 mycontent">
                            <span class="badge badge-primary badge-pill">@item.AuthorName</span><br />
                            <span class="badge badge-primary badge-pill">@item.CreationDate</span><br />
                            <span>
                                @for (int i = 0; i < 5; i++)
                                {
                                    if (i < Math.Floor(item.Rate))
                                    {
                                        <span class="fa fa-star" style=" color: orange;"></span>
                                    }
                                    else
                                    {
                                        <span class="fa fa-star"></span>
                                    }
                                }

                            </span>
                        </div>
                        <div class="col-sm-8 ">@item.Text</div>
                    </div>
                </div>
            </li>
        }
    </ul>
    Strona @(Model.CommentsList.PageCount < Model.CommentsList.PageNumber ? 0 : Model.CommentsList.PageNumber) z @Model.CommentsList.PageCount

    @Html.PagedListPager(Model.CommentsList, page => Url.Action("GetComments", new { page, offerId = Model.OfferId }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "commentsGridList" }))
    @*Elementy @(ViewBag.ItemNumber != 0 ? (ViewBag.PageSize * Model.CommentsList.PageNumber - ViewBag.PageSize + 1) : 0) - @(Math.Min((ViewBag.PageSize * Model.CommentsList.PageNumber), ViewBag.ItemNumber)) z @ViewBag.ItemNumber*@
</div>