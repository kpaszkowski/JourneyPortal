@model JourneyPortal.ViewModels.Offers.OffersGridViewModel
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<div class="contentBody">
    <div class="container" style="width:100%">
        <h2>Twoje oferty</h2>
        <table class="table table-striped" style="width:100%">
            <thead>
                <tr>
                    <th>Nazwa oferty</th>
                    <th>Data rozpoczęcia</th>
                    <th>Data zakończenia</th>
                    <th>Liczba biletów</th>
                    <th>Kraj</th>
                    <th>Koszt</th>
                    <th>Aktywne</th>
                    <th>Duplikuj</th>
                    <th>Edytuj</th>
                    <th>Usuń</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.OfferDetailList)
                {
                    <tr>
                        <td>@Html.ActionLink(item.Name, "GetOffersDetail", "Offers", new { id = item.Id }, null)</td>
                        <td>@item.StartDate</td>
                        <td>@item.EndDate</td>
                        <td>@item.NuberOfBooking</td>
                        <td>@item.Country</td>
                        <td>@item.Cost</td>
                        <td>
                            @if (item.IsActive)
                            {
                                using (Html.BeginForm("DisableOffer", "Offers", new { offerId = item.Id }, FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken()
                                    <button class="btn btn-warning" type="submit">Wyłącz</button>
                                }
                            }
                            else
                            {
                                using (Html.BeginForm("EnableOffer", "Offers", new { offerId = item.Id }, FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken()
                                    <button class="btn btn-success" type="submit"> Aktywuj</button>
                                }
                            }
                        </td>
                        <td>
                            @using (Html.BeginForm("DuplicateOffer", "Offers", new { offerId = item.Id }, FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <button class="btn btn-info" type="submit">Powiel</button>
                            }
                        </td>
                        <td>
                            @using (Html.BeginForm("EditOffer", "Offers", new { offerId = item.Id }, FormMethod.Post))
                            {
                                <button class="btn btn-default" type="submit"> Edytuj</button>
                            }
                        </td>
                        <td>
                            @using (Html.BeginForm("RemoveOffer", "Offers", new { offerId = item.Id }, FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <button class="btn btn-danger" type="submit"> Usuń</button>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <br />
        @*Elementy @(ViewBag.ItemNumber != 0 ? (ViewBag.PageSize * Model.OfferDetailList.PageNumber - ViewBag.PageSize + 1) : 0) - @(Math.Min((ViewBag.PageSize * Model.OfferDetailList.PageNumber), ViewBag.ItemNumber)) z @ViewBag.ItemNumber*@
        <br />
        Strona @(Model.OfferDetailList.PageCount < Model.OfferDetailList.PageNumber ? 0 : Model.OfferDetailList.PageNumber) z @Model.OfferDetailList.PageCount

        @Html.PagedListPager(Model.OfferDetailList, page => Url.Action("GetYourOffers",
                new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    </div>
</div>
