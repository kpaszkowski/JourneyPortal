@model JourneyPortal.ViewModels.Trip.ManageAtractionsViewModel
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<div class="contentBody">
    @if (!Model.IsPreviewOnly)
    {
        <h2>Twoje atrakcje</h2>
        @Html.ActionLink("Dodaj atrakcję", "CreateNewAtraction", "Trip", null, new { @class = "btn bg-primary" })
    }
    else
    {
        <h2>Atrakcje w wycieczce</h2>
    }
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Nazwa atrakcji</th>
                <th>Popularność</th>
                <th>Koszt</th>
                <th>Typ</th>
                <th>Czas zwiedzania</th>
                @if (!Model.IsPreviewOnly)
                {
                    <th>Aktywne</th>
                    <th>Edytuj</th>
                    <th>Usuń</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.atractionsList)
            {
                <tr>
                    <td>@Html.ActionLink(item.Name, "GetAtractionDetail", "Trip", new { id = item.Id }, null)</td>
                    <td>@item.Rate</td>
                    <td>@item.Cost</td>
                    <td>@item.Type</td>
                    <td>@item.TimeOfSightseeing</td>
                    @if (!Model.IsPreviewOnly)
                    {
                        <td>
                            @if (item.IsActive)
                            {
                                using (Html.BeginForm("DisableAtractions", "Trip", new { atractionId = item.Id ,Model.Page}, FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken()
                                    <button class="btn btn-warning" type="submit">Wyłącz</button>
                                }
                            }
                            else
                            {
                                using (Html.BeginForm("EnableAtractions", "Trip", new { atractionId = item.Id , Model.Page }, FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken()
                                    <button class="btn btn-success" type="submit"> Aktywuj</button>
                                }
                            }
                        </td>
                        <td>
                            @using (Html.BeginForm("EditAtraction", "Trip", new { atractionId = item.Id , Model.Page }, FormMethod.Post))
                            {
                                <button class="btn btn-default" type="submit"> Edytuj</button>
                            }
                        </td>
                        <td>
                            @using (Html.BeginForm("RemoveAtractions", "Trip", new { atractionId = item.Id }, FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <button class="btn btn-danger" type="submit"> Usuń</button>
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
    <br />
    Strona @(Model.atractionsList.PageCount < Model.atractionsList.PageNumber ? 0 : Model.atractionsList.PageNumber) z @Model.atractionsList.PageCount

    @Html.PagedListPager(Model.atractionsList, page => Url.Action("ManageAtractions",
                        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>